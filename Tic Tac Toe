#include <iostream>
using namespace std;
char a[9] = { '-','-','-','-','-','-','-','-','-' };
int n;
void board() {
	cout << "-1-|-2-|-3-" << endl;
	cout << "-4-|-5-|-6-" << endl;
	cout << "-7-|-8-|-9-" << endl;
	cout << endl;
	cout << "-" << a[0] << "-|-" << a[1] << "-|-" << a[2] << "-" << endl;
	cout << "-" << a[3] << "-|-" << a[4] << "-|-" << a[5] << "-" << endl;
	cout << "-" << a[6] << "-|-" << a[7] << "-|-" << a[8] << "-" << endl;
}
int logic(int x)
{
	if (((a[0] == 'X') && (a[0] == a[1] && a[1] == a[2])) || ((a[3] == 'X') && (a[3] == a[4] && a[4] == a[5])) || ((a[6] == 'X') && (a[6] == a[7] && a[7] == a[8])))
		x = 1;
	else if (((a[0] == 'X') && (a[0] == a[4] && a[4] == a[8])) || ((a[2] == 'X') && (a[2] == a[4] && a[4] == a[6])))
		x = 1;
	else if (((a[0] == 'X') && (a[0] == a[3] && a[3] == a[6])) || ((a[1] == 'X') && (a[1] == a[4] && a[4] == a[7])) || ((a[2] == 'X') && (a[2] == a[5] && a[5] == a[8])))
		x = 1;
	return(x);
}
int logic1(int o) {
	if (((a[0] == 'O') && (a[0] == a[1] && a[1] == a[2])) || ((a[3] == 'O') && (a[3] == a[4] && a[4] == a[5])) || ((a[6] == 'O') && (a[6] == a[7] && a[7] == a[8])))
		o = 1;
	else if (((a[0] == 'O') && (a[0] == a[4] && a[4] == a[8])) || ((a[2] == 'O') && (a[2] == a[4] && a[4] == a[6])))
		o = 1;
	else if (((a[0] == 'O') && (a[0] == a[3] && a[3] == a[6])) || ((a[1] == 'O') && (a[1] == a[4] && a[4] == a[7])) || ((a[2] == 'O') && (a[2] == a[5] && a[5] == a[8])))
		o = 1;
	return(o);
}
int main() {
	int x = 0, o = 0;
	for (int i = 1; i < 1000; i++)
	{
		system("cls");
		board();
		if (x == 1 || o == 1)
			break;
		cin >> n;
		while (n > 9 || n < 1)
		{
			cout << "Please type the right number\n:";
			cin >> n;
		}
		while (a[n - 1] == 'X' || a[n - 1] == 'O')
		{
			cout << "Slot is already occupied!\n";
			cin >> n;
		}
		if (i % 2 == 1)
			a[n - 1] = 'X';
		else
			a[n - 1] = 'O';
		x = logic(x);
		o = logic1(o);
	}
	if (x == 1)
		cout << "X-winner!" << endl;
	else if (o == 1)
		cout << "O-winner!" << endl;
	else
		cout << "Draw!\n";
	cout << "GameOver";
	return(0);
}#include <iostream>
using namespace std;
char a[9] = { '-','-','-','-','-','-','-','-','-' };
int n;
void board() {
	cout << "-1-|-2-|-3-" << endl;
	cout << "-4-|-5-|-6-" << endl;
	cout << "-7-|-8-|-9-" << endl;
	cout << endl;
	cout << "-" << a[0] << "-|-" << a[1] << "-|-" << a[2] << "-" << endl;
	cout << "-" << a[3] << "-|-" << a[4] << "-|-" << a[5] << "-" << endl;
	cout << "-" << a[6] << "-|-" << a[7] << "-|-" << a[8] << "-" << endl;
}
int logic(int x)
{
	if (((a[0] == 'X') && (a[0] == a[1] && a[1] == a[2])) || ((a[3] == 'X') && (a[3] == a[4] && a[4] == a[5])) || ((a[6] == 'X') && (a[6] == a[7] && a[7] == a[8])))
		x = 1;
	else if (((a[0] == 'X') && (a[0] == a[4] && a[4] == a[8])) || ((a[2] == 'X') && (a[2] == a[4] && a[4] == a[6])))
		x = 1;
	else if (((a[0] == 'X') && (a[0] == a[3] && a[3] == a[6])) || ((a[1] == 'X') && (a[1] == a[4] && a[4] == a[7])) || ((a[2] == 'X') && (a[2] == a[5] && a[5] == a[8])))
		x = 1;
	return(x);
}
int logic1(int o) {
	if (((a[0] == 'O') && (a[0] == a[1] && a[1] == a[2])) || ((a[3] == 'O') && (a[3] == a[4] && a[4] == a[5])) || ((a[6] == 'O') && (a[6] == a[7] && a[7] == a[8])))
		o = 1;
	else if (((a[0] == 'O') && (a[0] == a[4] && a[4] == a[8])) || ((a[2] == 'O') && (a[2] == a[4] && a[4] == a[6])))
		o = 1;
	else if (((a[0] == 'O') && (a[0] == a[3] && a[3] == a[6])) || ((a[1] == 'O') && (a[1] == a[4] && a[4] == a[7])) || ((a[2] == 'O') && (a[2] == a[5] && a[5] == a[8])))
		o = 1;
	return(o);
}
int main() {
	int x = 0, o = 0, gameover = 0;
	for (int i = 1; i < 1000; i++)
	{
		system("cls");
		board();
		if (x == 1 || o == 1)
			break;
		cin >> n;
		while (n > 9 || n < 1)
		{
			cout << "Please type the right number\n:";
			cin >> n;
		}
		while (a[n - 1] == 'X' || a[n - 1] == 'O')
		{
			cout << "Slot is already occupied!\n";
			cin >> n;
		}
		if (i % 2 == 1)
			a[n - 1] = 'X';
		else
			a[n - 1] = 'O';
		x = logic(x);
		o = logic1(o);
	}
	if (x == 1)
		cout << "X-winner!" << endl;
	else if (o == 1)
		cout << "O-winner!" << endl;
	else
		cout << "Draw!\n";
	cout << "GameOver";
	return(0);
}
